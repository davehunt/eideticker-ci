<?xml version='1.0' encoding='UTF-8'?>
<org.jenkinsci.plugins.managedscripts.ScriptBuildStepConfigProvider plugin="managed-scripts@1.1">
  <configs>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394514932</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394514932</id>
        <name>Install Eideticker dependencies</name>
        <comment>Install Eideticker dependencies</comment>
        <content>#!/bin/bash -ex
cd eideticker
./bootstrap.sh</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394297522</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394297522</id>
        <name>Install Orangutan</name>
        <comment>Install Orangutan on the device</comment>
        <content>#!/bin/bash -ex
adb push orng /mnt/sdcard
adb shell su -c dd if=/mnt/sdcard/orng of=/data/local/orng
adb shell su -c chmod 700 /data/local/orng
adb shell su -c rm /mnt/sdcard/orng</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381393646026</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381393646026</id>
        <name>Reset Gaia</name>
        <comment>Flash Gaia to the device</comment>
        <content>#!/bin/sh -ex
cd gaia
GAIA_OPTIMIZE=1 NOFTU=1 make reset-gaia
adb wait-for-device
adb shell 'while [ ""`getprop sys.boot_completed` != "1" ] ; do sleep 1; done'
adb forward tcp:2828 tcp:2828</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381395043707</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381395043707</id>
        <name>Create virtual environment</name>
        <comment>Create virtual environment</comment>
        <content>#!/bin/bash -ex
virtualenv .env</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394871633</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394871633</id>
        <name>Build PointGrey</name>
        <comment>Build PointGrey capture library</comment>
        <content>#!/bin/bash -ex
cd eideticker/src/videocapture/videocapture/pointgrey/
make</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394662775</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394662775</id>
        <name>Get dimensions</name>
        <comment>Get capture dimensions</comment>
        <content>#!/bin/bash -ex
cd eideticker
PROPERTIES=eideticker.properties
touch $PROPERTIES
if [ -z &quot;$CAPTURE_AREA&quot; ]; then
  ./bin/getdimensions.py --output-file=$PROPERTIES --output-screenshot=dimensions.png --wifi-settings=${WORKSPACE}/wifi.json
fi</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1382081846394</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1382081846394</id>
        <name>Clear workspace</name>
        <comment>Wipe out workspace</comment>
        <content>#!/bin/bash -ex

#This is needed due to JENKINS-13444 and JENKINS-19717 in the Workspace Cleanup plugin.
#Once these are resolved we can use the plugin to clear the workspace.

rm -rf .env
rm -rf b2g-distro
rm -rf b2g.zip
rm -rf logcat.txt
rm -rf ntpclient
rm -rf orng
rm -rf eideticker/captures/*</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1387475764685</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1387475764685</id>
        <name>Create WiFi settings</name>
        <comment>Create a WiFi settings file</comment>
        <content>#!/bin/bash -ex
./eideticker/bin/create-wifi-settings-file.py &quot;$1&quot; $2 $3 &gt; wifi.json</content>
        <args>
          <org.jenkinsci.plugins.managedscripts.ScriptConfig_-Arg>
            <name>SSID</name>
          </org.jenkinsci.plugins.managedscripts.ScriptConfig_-Arg>
          <org.jenkinsci.plugins.managedscripts.ScriptConfig_-Arg>
            <name>SECURITY</name>
          </org.jenkinsci.plugins.managedscripts.ScriptConfig_-Arg>
          <org.jenkinsci.plugins.managedscripts.ScriptConfig_-Arg>
            <name>PASSWORD</name>
          </org.jenkinsci.plugins.managedscripts.ScriptConfig_-Arg>
        </args>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394404621</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394404621</id>
        <name>Install NTP client</name>
        <comment>Install NTP client on the device</comment>
        <content>#!/bin/bash -ex
adb push ntpclient /mnt/sdcard
adb shell su -c dd if=/mnt/sdcard/ntpclient of=/data/local/ntpclient
adb shell su -c chmod 700 /data/local/ntpclient
adb shell su -c rm /mnt/sdcard/ntpclient</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394732681</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381394732681</id>
        <name>Run tests</name>
        <comment>Run the tests and update the dashboard</comment>
        <content>#!/bin/bash -ex
cd eideticker
TESTS=&quot;b2g-contacts-startup b2g-messages-startup b2g-settings-startup b2g-camera-startup b2g-marketplace-startup b2g-contacts-scrolling b2g-messages-scrolling b2g-settings-scrolling b2g-callog-scrolling b2g-marketplace-scrolling&quot;
for TEST in $TESTS; do
./bin/update-dashboard.py --sources-xml=${WORKSPACE}/b2g-distro/sources.xml --num-runs=3 --wifi-settings=${WORKSPACE}/wifi.json --no-sync-time b2g-nightly $TEST
done</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
    <entry>
      <string>org.jenkinsci.plugins.managedscripts.ScriptConfig1381393993637</string>
      <org.jenkinsci.plugins.managedscripts.ScriptConfig>
        <id>org.jenkinsci.plugins.managedscripts.ScriptConfig1381393993637</id>
        <name>Flash Inari</name>
        <comment>Flash an Inari device</comment>
        <content>#!/bin/bash -ex
unzip -o b2g.zip
cd b2g-distro
./flash.sh
adb wait-for-device
adb shell &apos;while [ &quot;&quot;`getprop sys.boot_completed` != &quot;1&quot; ] ; do sleep 1; done&apos;
adb forward tcp:2828 tcp:2828</content>
        <args/>
      </org.jenkinsci.plugins.managedscripts.ScriptConfig>
    </entry>
  </configs>
</org.jenkinsci.plugins.managedscripts.ScriptBuildStepConfigProvider>
